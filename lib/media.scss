@use "sass:list" as list;
@use "sass:map" as map;
@use "config" as config;

@mixin media-up-to($name) {
  $value: map.get(config.$screens, $name);

  @if $value == null {
    @error "`#{$name}` is not a valid screen size";
  }

  @media (min-width: $value) {
    @content;
  }
}

@mixin media-down-to($name) {
  $value: map.get(config.$screens, $name);

  @if $value == null {
    @error "`#{$name}` is not a valid screen size";
  }

  @media (max-width: $value - 1) {
    @content;
  }
}

@mixin media-only($name) {
  $value: map.get(config.$screens, $name);

  @if $value == null {
    @error "`#{$name}` is not a valid screen size";
  }

  $index: list.index(config.$screens, $name $value);
  $value-up: list.nth(map.values(config.$screens), $index + 1);

  @media (min-width: $value) and (max-width: $value-up - 1) {
    @content;
  }
}

@mixin media-between($name1, $name2) {
  $value1: map.get(config.$screens, $name1);
  $value2: map.get(config.$screens, $name2);

  @if $value1 == null {
    @error "`#{$name1}` is not a valid screen size";
  }
  @if $value2 == null {
    @error "`#{$name2}` is not a valid screen size";
  }

  @media (min-width: $value1) and (max-width: $value2 - 1) {
    @content;
  }
}

@mixin media-portrait {
  @media (orientation: portrait) {
    @content;
  }
}

@mixin media-landscape {
  @media (orientation: landscape) {
    @content;
  }
}

@mixin media-motion-safe {
  @media (prefers-reduced-motion: no-preference) {
    @content;
  }
}

@mixin media-motion-reduce {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

@mixin media-dark {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}
